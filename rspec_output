FFFFFFFFF*F*FFFFFFFFF*FFF*FFFFFFFFF.......*.FFFFFF

Pending:
  ProcessStep add some examples to (or delete) /home/logan/workspace/SAFIRA/spec/models/process_step_spec.rb
    # No reason given
    # ./spec/models/process_step_spec.rb:5
  Admin add some examples to (or delete) /home/logan/workspace/SAFIRA/spec/models/admin_spec.rb
    # No reason given
    # ./spec/models/admin_spec.rb:5
  Entrepreneur add some examples to (or delete) /home/logan/workspace/SAFIRA/spec/models/entrepreneur_spec.rb
    # No reason given
    # ./spec/models/entrepreneur_spec.rb:5
  Feedback add some examples to (or delete) /home/logan/workspace/SAFIRA/spec/models/feedback_spec.rb
    # No reason given
    # ./spec/models/feedback_spec.rb:5
  CustomInfo add some examples to (or delete) /home/logan/workspace/SAFIRA/spec/models/custom_info_spec.rb
    # No reason given
    # ./spec/models/custom_info_spec.rb:5

Failures:

  1) ReleasesController routing routes to #update
     Failure/Error: put("/releases/1").should route_to("releases#update", :id => "1")
       No route matches "/releases/1"
     # ./spec/routing/releases_routing_spec.rb:27:in `block (3 levels) in <top (required)>'

  2) ReleasesController routing routes to #new
     Failure/Error: get("/releases/new").should route_to("releases#new")
       No route matches "/releases/new"
     # ./spec/routing/releases_routing_spec.rb:11:in `block (3 levels) in <top (required)>'

  3) ReleasesController routing routes to #create
     Failure/Error: post("/releases").should route_to("releases#create")
       No route matches "/releases"
     # ./spec/routing/releases_routing_spec.rb:23:in `block (3 levels) in <top (required)>'

  4) ReleasesController routing routes to #index
     Failure/Error: get("/releases").should route_to("releases#index")
       No route matches "/releases"
     # ./spec/routing/releases_routing_spec.rb:7:in `block (3 levels) in <top (required)>'

  5) ReleasesController routing routes to #edit
     Failure/Error: get("/releases/1/edit").should route_to("releases#edit", :id => "1")
       No route matches "/releases/1/edit"
     # ./spec/routing/releases_routing_spec.rb:19:in `block (3 levels) in <top (required)>'

  6) ReleasesController routing routes to #show
     Failure/Error: get("/releases/1").should route_to("releases#show", :id => "1")
       No route matches "/releases/1"
     # ./spec/routing/releases_routing_spec.rb:15:in `block (3 levels) in <top (required)>'

  7) ReleasesController routing routes to #destroy
     Failure/Error: delete("/releases/1").should route_to("releases#destroy", :id => "1")
       No route matches "/releases/1"
     # ./spec/routing/releases_routing_spec.rb:31:in `block (3 levels) in <top (required)>'

  8) CandidateMailer send_confirmation renders the headers
     Failure/Error: let(:mail) { CandidateMailer.send_confirmation }
     ArgumentError:
       wrong number of arguments (0 for 2)
     # ./app/mailers/candidate_mailer.rb:10:in `send_confirmation'
     # ./spec/mailers/candidate_mailer_spec.rb:6:in `block (3 levels) in <top (required)>'
     # ./spec/mailers/candidate_mailer_spec.rb:9:in `block (3 levels) in <top (required)>'

  9) CandidateMailer send_confirmation renders the body
     Failure/Error: let(:mail) { CandidateMailer.send_confirmation }
     ArgumentError:
       wrong number of arguments (0 for 2)
     # ./app/mailers/candidate_mailer.rb:10:in `send_confirmation'
     # ./spec/mailers/candidate_mailer_spec.rb:6:in `block (3 levels) in <top (required)>'
     # ./spec/mailers/candidate_mailer_spec.rb:15:in `block (3 levels) in <top (required)>'

  10) Release 
     Failure/Error: Releases.any_instance.stub(:save_attached_files).and_return(true)
     NameError:
       uninitialized constant Releases
     # ./spec/models/release_spec.rb:6:in `block (2 levels) in <top (required)>'

  11) Ability a candidate have to be authenticated
     Failure/Error: ability = build(:ability)
     ArgumentError:
       Factory not registered: ability
     # ./spec/models/ability_spec.rb:6:in `block (2 levels) in <top (required)>'

  12) Releases GET /releases works! (now write some real specs)
     Failure/Error: get releases_path
     NameError:
       undefined local variable or method `releases_path' for #<RSpec::Core::ExampleGroup::Nested_16::Nested_1:0x00000005c238a0>
     # ./spec/requests/releases_spec.rb:7:in `block (3 levels) in <top (required)>'

  13) CandidatesController routing routes to #update
     Failure/Error: put("/candidates/1").should route_to("candidates#update", :id => "1")
       No route matches "/candidates/1"
     # ./spec/routing/candidates_routing_spec.rb:28:in `block (3 levels) in <top (required)>'

  14) CandidatesController routing routes to #new
     Failure/Error: get("/candidates/new").should route_to("candidates#new")
       No route matches "/candidates/new"
     # ./spec/routing/candidates_routing_spec.rb:12:in `block (3 levels) in <top (required)>'

  15) CandidatesController routing routes to #create
     Failure/Error: post("/candidates").should route_to("candidates#create")
       No route matches "/candidates"
     # ./spec/routing/candidates_routing_spec.rb:24:in `block (3 levels) in <top (required)>'

  16) CandidatesController routing routes to #index
     Failure/Error: get("/candidates").should route_to("candidates#index")
       No route matches "/candidates"
     # ./spec/routing/candidates_routing_spec.rb:8:in `block (3 levels) in <top (required)>'

  17) CandidatesController routing routes to #edit
     Failure/Error: get("/candidates/1/edit").should route_to("candidates#edit", :id => "1")
       No route matches "/candidates/1/edit"
     # ./spec/routing/candidates_routing_spec.rb:20:in `block (3 levels) in <top (required)>'

  18) CandidatesController routing routes to #show
     Failure/Error: get("/candidates/1").should route_to("candidates#show", :id => "1")
       No route matches "/candidates/1"
     # ./spec/routing/candidates_routing_spec.rb:16:in `block (3 levels) in <top (required)>'

  19) CandidatesController routing routes to #destroy
     Failure/Error: delete("/candidates/1").should route_to("candidates#destroy", :id => "1")
       No route matches "/candidates/1"
     # ./spec/routing/candidates_routing_spec.rb:32:in `block (3 levels) in <top (required)>'

  20) FeedbackMailer public_feedback renders the headers
     Failure/Error: let(:mail) { FeedbackMailer.public_feedback }
     NoMethodError:
       undefined method `public_feedback' for FeedbackMailer:Class
     # ./spec/mailers/feedback_mailer_spec.rb:6:in `block (3 levels) in <top (required)>'
     # ./spec/mailers/feedback_mailer_spec.rb:9:in `block (3 levels) in <top (required)>'

  21) FeedbackMailer public_feedback renders the body
     Failure/Error: let(:mail) { FeedbackMailer.public_feedback }
     NoMethodError:
       undefined method `public_feedback' for FeedbackMailer:Class
     # ./spec/mailers/feedback_mailer_spec.rb:6:in `block (3 levels) in <top (required)>'
     # ./spec/mailers/feedback_mailer_spec.rb:15:in `block (3 levels) in <top (required)>'

  22) Candidate a candidate have to be authenticated
     Failure/Error: candidato.confirm("oi").should be == false
     NoMethodError:
       undefined method `register_confirmed_at=' for nil:NilClass
     # ./app/models/candidate.rb:26:in `confirm'
     # ./spec/models/candidate_spec.rb:7:in `block (2 levels) in <top (required)>'

  23) Cashier 
     Failure/Error: it {should belongs_to :enterprise}
     NoMethodError:
       undefined method `belongs_to' for #<RSpec::Core::ExampleGroup::Nested_7:0x00000004ef7690>
     # ./spec/models/cashier_spec.rb:5:in `block (2 levels) in <top (required)>'

  24) Cashier 
     Failure/Error: it {should has_many :releases}
     NoMethodError:
       undefined method `has_many' for #<RSpec::Core::ExampleGroup::Nested_7:0x00000004f1a258>
     # ./spec/models/cashier_spec.rb:7:in `block (2 levels) in <top (required)>'

  25) EntrepreneursController routing routes to #update
     Failure/Error: put("/entrepreneurs/1").should route_to("entrepreneurs#update", :id => "1")
       The recognized options <{"action"=>"update", "controller"=>"human_resources", "id"=>"1"}> did not match <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"update"}>, difference: <{"controller"=>"entrepreneurs"}>.
       <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"update"}> expected but was
       <{"action"=>"update", "controller"=>"human_resources", "id"=>"1"}>.
     # ./spec/routing/entrepreneurs_routing_spec.rb:28:in `block (3 levels) in <top (required)>'

  26) EntrepreneursController routing routes to #new
     Failure/Error: get("/entrepreneurs/new").should route_to("entrepreneurs#new")
       The recognized options <{"action"=>"new", "controller"=>"human_resources"}> did not match <{"controller"=>"entrepreneurs", "action"=>"new"}>, difference: <{"controller"=>"entrepreneurs"}>.
       <{"controller"=>"entrepreneurs", "action"=>"new"}> expected but was
       <{"action"=>"new", "controller"=>"human_resources"}>.
     # ./spec/routing/entrepreneurs_routing_spec.rb:12:in `block (3 levels) in <top (required)>'

  27) EntrepreneursController routing routes to #create
     Failure/Error: post("/entrepreneurs").should route_to("entrepreneurs#create")
       The recognized options <{"action"=>"create", "controller"=>"human_resources"}> did not match <{"controller"=>"entrepreneurs", "action"=>"create"}>, difference: <{"controller"=>"entrepreneurs"}>.
       <{"controller"=>"entrepreneurs", "action"=>"create"}> expected but was
       <{"action"=>"create", "controller"=>"human_resources"}>.
     # ./spec/routing/entrepreneurs_routing_spec.rb:24:in `block (3 levels) in <top (required)>'

  28) EntrepreneursController routing routes to #index
     Failure/Error: get("/entrepreneurs").should route_to("entrepreneurs#index")
       The recognized options <{"action"=>"index", "controller"=>"human_resources"}> did not match <{"controller"=>"entrepreneurs", "action"=>"index"}>, difference: <{"controller"=>"entrepreneurs"}>.
       <{"controller"=>"entrepreneurs", "action"=>"index"}> expected but was
       <{"action"=>"index", "controller"=>"human_resources"}>.
     # ./spec/routing/entrepreneurs_routing_spec.rb:8:in `block (3 levels) in <top (required)>'

  29) EntrepreneursController routing routes to #edit
     Failure/Error: get("/entrepreneurs/1/edit").should route_to("entrepreneurs#edit", :id => "1")
       The recognized options <{"action"=>"edit", "controller"=>"human_resources", "id"=>"1"}> did not match <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"edit"}>, difference: <{"controller"=>"entrepreneurs"}>.
       <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"edit"}> expected but was
       <{"action"=>"edit", "controller"=>"human_resources", "id"=>"1"}>.
     # ./spec/routing/entrepreneurs_routing_spec.rb:20:in `block (3 levels) in <top (required)>'

  30) EntrepreneursController routing routes to #show
     Failure/Error: get("/entrepreneurs/1").should route_to("entrepreneurs#show", :id => "1")
       The recognized options <{"action"=>"show", "controller"=>"human_resources", "id"=>"1"}> did not match <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"show"}>, difference: <{"controller"=>"entrepreneurs"}>.
       <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"show"}> expected but was
       <{"action"=>"show", "controller"=>"human_resources", "id"=>"1"}>.
     # ./spec/routing/entrepreneurs_routing_spec.rb:16:in `block (3 levels) in <top (required)>'

  31) EntrepreneursController routing routes to #destroy
     Failure/Error: delete("/entrepreneurs/1").should route_to("entrepreneurs#destroy", :id => "1")
       The recognized options <{"action"=>"destroy", "controller"=>"human_resources", "id"=>"1"}> did not match <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"destroy"}>, difference: <{"controller"=>"entrepreneurs"}>.
       <{"id"=>"1", "controller"=>"entrepreneurs", "action"=>"destroy"}> expected but was
       <{"action"=>"destroy", "controller"=>"human_resources", "id"=>"1"}>.
     # ./spec/routing/entrepreneurs_routing_spec.rb:32:in `block (3 levels) in <top (required)>'

  32) Entrepreneurs GET /entrepreneurs works! (now write some real specs)
     Failure/Error: get entrepreneurs_path
     NameError:
       undefined local variable or method `entrepreneurs_path' for #<RSpec::Core::ExampleGroup::Nested_15::Nested_1:0x00000004ea4d28>
     # ./spec/requests/entrepreneurs_spec.rb:8:in `block (3 levels) in <top (required)>'

  33) SelectionProcess should add candidate with a valid candidate
     Failure/Error: selection = create(:selection_process)
     NoMethodError:
       undefined method `description=' for #<SelectionProcess:0x00000004f14a38>
     # ./spec/models/selection_process_spec.rb:11:in `block (2 levels) in <top (required)>'

  34) SelectionProcess should always create a inscription step when created
     Failure/Error: selection = build(:selection_process)
     NoMethodError:
       undefined method `description=' for #<SelectionProcess:0x00000005d41f98>
     # ./spec/models/selection_process_spec.rb:26:in `block (2 levels) in <top (required)>'

  35) SelectionProcess should add candidate with a invalid candidate
     Failure/Error: selection = create(:selection_process)
     NoMethodError:
       undefined method `description=' for #<SelectionProcess:0x00000005f8dba8>
     # ./spec/models/selection_process_spec.rb:18:in `block (2 levels) in <top (required)>'

  36) Login page should log on and redirect to selection processes page when user/password is correct
     Failure/Error: sign_in(enterprise)
     NoMethodError:
       undefined method `sign_in' for #<RSpec::Core::ExampleGroup::Nested_1:0x00000005b3f5d8>
     # ./spec/features/login_spec.rb:8:in `block (2 levels) in <top (required)>'

  37) Login page should show error message when user/password is incorrect
     Failure/Error: sign_up_with('emailnadaaver@gmail.com', 'senhanadaaver')
     NoMethodError:
       undefined method `sign_up_with' for #<RSpec::Core::ExampleGroup::Nested_1:0x0000000590b578>
     # ./spec/features/login_spec.rb:13:in `block (2 levels) in <top (required)>'

Finished in 1 minute 34.68 seconds
50 examples, 37 failures, 5 pending

Failed examples:

rspec ./spec/routing/releases_routing_spec.rb:26 # ReleasesController routing routes to #update
rspec ./spec/routing/releases_routing_spec.rb:10 # ReleasesController routing routes to #new
rspec ./spec/routing/releases_routing_spec.rb:22 # ReleasesController routing routes to #create
rspec ./spec/routing/releases_routing_spec.rb:6 # ReleasesController routing routes to #index
rspec ./spec/routing/releases_routing_spec.rb:18 # ReleasesController routing routes to #edit
rspec ./spec/routing/releases_routing_spec.rb:14 # ReleasesController routing routes to #show
rspec ./spec/routing/releases_routing_spec.rb:30 # ReleasesController routing routes to #destroy
rspec ./spec/mailers/candidate_mailer_spec.rb:8 # CandidateMailer send_confirmation renders the headers
rspec ./spec/mailers/candidate_mailer_spec.rb:14 # CandidateMailer send_confirmation renders the body
rspec ./spec/models/release_spec.rb:9 # Release 
rspec ./spec/models/ability_spec.rb:5 # Ability a candidate have to be authenticated
rspec ./spec/requests/releases_spec.rb:5 # Releases GET /releases works! (now write some real specs)
rspec ./spec/routing/candidates_routing_spec.rb:27 # CandidatesController routing routes to #update
rspec ./spec/routing/candidates_routing_spec.rb:11 # CandidatesController routing routes to #new
rspec ./spec/routing/candidates_routing_spec.rb:23 # CandidatesController routing routes to #create
rspec ./spec/routing/candidates_routing_spec.rb:7 # CandidatesController routing routes to #index
rspec ./spec/routing/candidates_routing_spec.rb:19 # CandidatesController routing routes to #edit
rspec ./spec/routing/candidates_routing_spec.rb:15 # CandidatesController routing routes to #show
rspec ./spec/routing/candidates_routing_spec.rb:31 # CandidatesController routing routes to #destroy
rspec ./spec/mailers/feedback_mailer_spec.rb:8 # FeedbackMailer public_feedback renders the headers
rspec ./spec/mailers/feedback_mailer_spec.rb:14 # FeedbackMailer public_feedback renders the body
rspec ./spec/models/candidate_spec.rb:5 # Candidate a candidate have to be authenticated
rspec ./spec/models/cashier_spec.rb:5 # Cashier 
rspec ./spec/models/cashier_spec.rb:7 # Cashier 
rspec ./spec/routing/entrepreneurs_routing_spec.rb:27 # EntrepreneursController routing routes to #update
rspec ./spec/routing/entrepreneurs_routing_spec.rb:11 # EntrepreneursController routing routes to #new
rspec ./spec/routing/entrepreneurs_routing_spec.rb:23 # EntrepreneursController routing routes to #create
rspec ./spec/routing/entrepreneurs_routing_spec.rb:7 # EntrepreneursController routing routes to #index
rspec ./spec/routing/entrepreneurs_routing_spec.rb:19 # EntrepreneursController routing routes to #edit
rspec ./spec/routing/entrepreneurs_routing_spec.rb:15 # EntrepreneursController routing routes to #show
rspec ./spec/routing/entrepreneurs_routing_spec.rb:31 # EntrepreneursController routing routes to #destroy
rspec ./spec/requests/entrepreneurs_spec.rb:6 # Entrepreneurs GET /entrepreneurs works! (now write some real specs)
rspec ./spec/models/selection_process_spec.rb:10 # SelectionProcess should add candidate with a valid candidate
rspec ./spec/models/selection_process_spec.rb:25 # SelectionProcess should always create a inscription step when created
rspec ./spec/models/selection_process_spec.rb:17 # SelectionProcess should add candidate with a invalid candidate
rspec ./spec/features/login_spec.rb:6 # Login page should log on and redirect to selection processes page when user/password is correct
rspec ./spec/features/login_spec.rb:12 # Login page should show error message when user/password is incorrect

Randomized with seed 30248

Coverage report generated for RSpec to /home/logan/workspace/SAFIRA/coverage. 195 / 500 LOC (39.0%) covered.
[33m[Coveralls] Outside the Travis environment, not sending data.[0m
